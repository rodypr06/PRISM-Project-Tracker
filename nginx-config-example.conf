# Nginx configuration for PRISM Project Tracker
# Place this in: /etc/nginx/sites-available/prism.rodytech.net
# Then symlink to: /etc/nginx/sites-enabled/

server {
    listen 80;
    listen [::]:80;
    server_name prism.rodytech.net;

    # Redirect HTTP to HTTPS (if using SSL)
    # return 301 https://$server_name$request_uri;

    # Or if Cloudflare handles SSL (Full mode), proxy directly:

    # Client max body size
    client_max_body_size 10M;

    # Proxy to Node.js backend
    location /api/ {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Serve frontend static files (for production build)
    location / {
        # If you have a production build
        # root /home/macboypr/prism-client-project-tracker/client/dist;
        # try_files $uri $uri/ /index.html;

        # For development, proxy to Vite dev server
        proxy_pass http://127.0.0.1:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTPS configuration (if not using Cloudflare SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name prism.rodytech.net;
#
#     # SSL certificates (use certbot for Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/prism.rodytech.net/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/prism.rodytech.net/privkey.pem;
#
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
#
#     # ... rest of configuration same as above
# }
